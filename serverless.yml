service: aws-node-http-api-project
frameworkVersion: '3'

plugins:
  - serverless-iam-roles-per-function
  - serverless-domain-manager
  - serverless-certificate-creator

custom:
  customDomain:
    domainName: test.batterypool.com
    basePath: ''
    stage: ${self:provider.stage}
    certificateName: 'test.batterypool.com'
    createRoute53Record: true
  customCertificate:
    certificateName: 'test.batterypool.com' 
    hostedZoneNames: 'batterypool.com.'
    region: us-east-1
    writeCertInfoToFile: true
    certInfoFileName: "certs/${self:provider.stage}/cert-info.yml"
    rewriteRecords: false
  ITEMS_DYNAMODB_TABLE: sls-basic-operations-items

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  environment: ${self:custom}

functions:
  saveItem:
    handler: handler.saveItem
    events:
      - http:
          path: item
          method: post
    iamRoleStatements:
      - Effect: "Allow"        
        Action:
          - dynamodb:PutItem        
        Resource:
          Fn::GetAtt:
            - ImagesTable
            - Arn
  getItem:
    handler: handler.getItem
    events:
      - http:
          path: item/{itemId}
          method: get
    iamRoleStatements:
      - Effect: "Allow"        
        Action:
          - dynamodb:GetItem        
        Resource:
          Fn::GetAtt:
            - ImagesTable
            - Arn

resources:
  Resources:
    ImagesTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
        - AttributeName: "itemId"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "itemId"
          KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.ITEMS_DYNAMODB_TABLE}