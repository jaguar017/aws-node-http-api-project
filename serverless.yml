service: aws-node-http-api-project
frameworkVersion: '3'

plugins:
  - serverless-iam-roles-per-function

custom:
  ITEMS_DYNAMODB_TABLE: sls-basic-operations-items

provider:
  name: aws
  runtime: nodejs18.x
  environment: ${self:custom}
  logs:
    httpApi: true
    format: '{ "ip": "$context.identity.sourceIp", "requestTime":"$context.requestTime" ,"menthod": "$context.httpMethod"}'

functions:
  saveItem:
    handler: handler.saveItem
    events:
      - http:
          path: item
          method: post
      - cloudwatchLog: '/aws/lambda/aws-node-http-api-project-dev-saveItem'
    iamRoleStatements:
      - Effect: "Allow"        
        Action:
          - dynamodb:PutItem        
        Resource:
          Fn::GetAtt:
            - ImagesTable
            - Arn
  getItem:
    handler: handler.getItem
    events:
      - http:
          path: item/{itemId}
          method: get
      - cloudwatchLog: 
          logGroup: '/aws/lambda/aws-node-http-api-project-dev-getItem'
    iamRoleStatements:
      - Effect: "Allow"        
        Action:
          - dynamodb:GetItem        
        Resource:
          Fn::GetAtt:
            - ImagesTable
            - Arn

resources:
  Resources:
    ImagesTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
        - AttributeName: "itemId"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "itemId"
          KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.ITEMS_DYNAMODB_TABLE}
    AccessLoggedApi: 
      Type: AWS::Logs::LogGroup
      Properties: 
        AccessLogSettings:
          DestinationArn: !GetAtt AccessLogGroup.Arn
          Format: '{"requestTime":"$context.requestTime","requestId":"$context.requestId","httpMethod":"$context.httpMethod","path":"$context.path","routeKey":"$context.routeKey","status":$context.status,"responseLatency":$context.responseLatency}'     
    AccessLogGroup:
      Type: AWS::Logs::LogGroup